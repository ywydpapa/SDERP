<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="account">

	<select id="listVat" resultType="accountDto">
		select a.*, b.custName vatSellerName, c.custName vatBuyerName, sum(case when a.vatType='B' then a.vatTax + a.vatAmount end) AS vatAmountB, sum(case when a.vatType='S' then a.vatTax + a.vatAmount end) AS vatAmountS, 
		sum(case when a.vatStatus='B5' then d.dataTotal end) AS serialTotalB, sum(case when a.vatStatus='S5' then d.dataTotal end) AS serialTotalS, f.custBBalance AS custBalance
		from swc_vat a
				   left join swc_cust b on a.vatSellerCustNo = b.custNo
				   left join swc_cust c on a.vatBuyerCustNo = c.custNo
				   left join swc_soppdata01 d on a.vatSerial = d.vatSerial and d.attrib not like 'XXX%'
				   left join swc_cust e ON if(a.vatType='B', a.vatSellerCustNo = e.custNo, a.vatBuyerCustNo = e.custNo)
				   left join swc_custdata f ON e.custNo = f.custNo and f.attrib not like 'XXX%' 
		where a.compNo = #{compNo} and a.attrib not like 'XXX%'
		<if test="listDateFrom != null and listDateFrom != ''">
			and a.vatIssueDate Between #{listDateFrom} and now()
		</if>
		 group by (case when a.vatType='B' then a.vatSellerCustNo END), (case when a.vatType='S' then a.vatBuyerCustNo END) order by a.vatIssueDate desc
	
	</select>

	<select id="listVatSearch" resultType="accountDto">
 		select a.*, b.custName vatSellerName, c.custName vatBuyerName, sum(case when a.vatType='B' then a.vatTax + a.vatAmount end) AS vatAmountB, sum(case when a.vatType='S' then a.vatTax + a.vatAmount end) AS vatAmountS, 
		sum(case when a.vatStatus='B5' then d.dataTotal end) AS serialTotalB, sum(case when a.vatStatus='S5' then d.dataTotal end) AS serialTotalS 
		from swc_vat a
			   left join swc_cust b on a.vatSellerCustNo = b.custNo
			   left join swc_cust c on a.vatBuyerCustNo = c.custNo
			   left join swc_soppdata01 d on a.vatSerial = d.vatSerial and d.attrib not like 'XXX%'
		where a.compNo = #{compNo} and a.attrib not like 'XXX%' 
		<if test="vatSellerCustNo != null and vatSellerCustNo != ''">
 		 	and a.vatSellerCustNo = #{vatSellerCustNo}
 		</if>
 		<if test="vatType != null and vatType != ''">
 		 	and a.vatType = #{vatType}
 		</if>
 		<if test="vatIssueDateTo != null and vatIssueDateTo != ''">
 		 	and a.vatIssueDate BETWEEN #{vatIssueDateFrom} and #{vatIssueDateTo}
 		</if>
 		<if test="vatSerial != null and vatSerial != ''">
 		 	and a.vatSerial like CONCAT('%', #{vatSerial}, '%')
 		</if>
 		<if test="vatRemark != null and vatRemark != ''">
 		 	and a.vatRemark like CONCAT('%', #{vatRemark}, '%')
 		</if>
 		<if test="listDateFrom != null and listDateFrom != '' and vatIssueDateTo == null or vatIssueDateTo == '' and vatSerial == null or vatSerial == ''">
			and a.vatIssueDate Between #{listDateFrom} and now()
		</if>
		 group by (case when a.vatType='B' then a.vatSellerCustNo END), (case when a.vatType='S' then a.vatBuyerCustNo END) order by a.vatIssueDate desc
 	</select>
 	
 	<select id="listVatB" resultType="accountDto">
		select a.*, b.custName vatSellerName, c.custName vatBuyerName, sum(d.dataAmt) vatSum from swc_vat a
				   left join swc_cust b on a.vatSellerCustNo = b.custNo
				   left join swc_cust c on a.vatBuyerCustNo = c.custNo
				   left join swc_soppdata01 d on a.vatSerial = d.vatSerial and d.attrib not like 'XXX%'
		where a.compNo = #{compNo} and a.attrib not like 'XXX%' and a.vatType = 'B'
		<if test="listDateFrom != null and listDateFrom != ''">
			and a.vatIssueDate Between #{listDateFrom} and now()
		</if>
		 group by a.vatSerial order by a.vatIssueDate desc
	
	</select>

	<select id="listVatSearchB" resultType="accountDto">
 		select a.*, b.custName vatSellerName, c.custName vatBuyerName, sum(d.dataAmt) vatSum from swc_vat a
			   left join swc_cust b on a.vatSellerCustNo = b.custNo
			   left join swc_cust c on a.vatBuyerCustNo = c.custNo
			   left join swc_soppdata01 d on a.vatSerial = d.vatSerial and d.attrib not like 'XXX%'
		where a.compNo = #{compNo} and a.attrib not like 'XXX%' and a.vatType = 'B' 
		<if test="vatSellerCustNo != null and vatSellerCustNo != ''">
 		 	and a.vatSellerCustNo = #{vatSellerCustNo}
 		</if>
 		<if test="vatType != null and vatType != ''">
 		 	and a.vatType = #{vatType}
 		</if>
 		<if test="vatIssueDateTo != null and vatIssueDateTo != ''">
 		 	and a.vatIssueDate BETWEEN #{vatIssueDateFrom} and #{vatIssueDateTo}
 		</if>
 		<if test="vatSerial != null and vatSerial != ''">
 		 	and a.vatSerial like CONCAT('%', #{vatSerial}, '%')
 		</if>
 		<if test="vatRemark != null and vatRemark != ''">
 		 	and a.vatRemark like CONCAT('%', #{vatRemark}, '%')
 		</if>
 		<if test="listDateFrom != null and listDateFrom != '' and vatIssueDateTo == null or vatIssueDateTo == '' and vatSerial == null or vatSerial == ''">
			and a.vatIssueDate Between #{listDateFrom} and now()
		</if>
		 group by a.vatSerial order by a.vatIssueDate desc
 	</select>
 	
 	<select id="listVatS" resultType="accountDto">
		select a.*, b.custName vatSellerName, c.custName vatBuyerName, sum(d.dataAmt) vatSum from swc_vat a
				   left join swc_cust b on a.vatSellerCustNo = b.custNo
				   left join swc_cust c on a.vatBuyerCustNo = c.custNo
				   left join swc_soppdata01 d on a.vatSerial = d.vatSerial and d.attrib not like 'XXX%'
		where a.compNo = #{compNo} and a.attrib not like 'XXX%' and a.vatType = 'S'
		<if test="listDateFrom != null and listDateFrom != ''">
			and a.vatIssueDate Between #{listDateFrom} and now()
		</if>
		 group by a.vatSerial order by a.vatIssueDate desc
	
	</select>

	<select id="listVatSearchS" resultType="accountDto">
 		select a.*, b.custName vatSellerName, c.custName vatBuyerName, sum(d.dataAmt) vatSum from swc_vat a
			   left join swc_cust b on a.vatSellerCustNo = b.custNo
			   left join swc_cust c on a.vatBuyerCustNo = c.custNo
			   left join swc_soppdata01 d on a.vatSerial = d.vatSerial and d.attrib not like 'XXX%'
		where a.compNo = #{compNo} and a.attrib not like 'XXX%' and a.vatType = 'S' 
		<if test="vatSellerCustNo != null and vatSellerCustNo != ''">
 		 	and a.vatSellerCustNo = #{vatSellerCustNo}
 		</if>
 		<if test="vatType != null and vatType != ''">
 		 	and a.vatType = #{vatType}
 		</if>
 		<if test="vatIssueDateTo != null and vatIssueDateTo != ''">
 		 	and a.vatIssueDate BETWEEN #{vatIssueDateFrom} and #{vatIssueDateTo}
 		</if>
 		<if test="vatSerial != null and vatSerial != ''">
 		 	and a.vatSerial like CONCAT('%', #{vatSerial}, '%')
 		</if>
 		<if test="vatRemark != null and vatRemark != ''">
 		 	and a.vatRemark like CONCAT('%', #{vatRemark}, '%')
 		</if>
 		<if test="listDateFrom != null and listDateFrom != '' and vatIssueDateTo == null or vatIssueDateTo == '' and vatSerial == null or vatSerial == ''">
			and a.vatIssueDate Between #{listDateFrom} and now()
		</if>
		 group by a.vatSerial order by a.vatIssueDate desc
 	</select>
 	
 	<select id="custVatListModal" resultType="accountDto">
 		select a.*, b.custName vatSellerName, c.custName vatBuyerName from swc_vat a
 		left join swc_cust b on a.vatSellerCustNo = b.custNo
		left join swc_cust c on a.vatBuyerCustNo = c.custNo
 		where a.compNo = #{compNo} and a.vatBuyerCustNo = #{custNo} or a.vatSellerCustNo = #{custNo} order by a.vatIssueDate desc;
 	</select>
 
	<select id="bacSelectList" resultType="accountDto">
		select * from swc_bacledger where bacSerial = #{bacSerial} order by baclogTime desc;
	</select>
	
	<select id="cardSelectList" resultType="accountDto">
		select * from swc_cardledger where cardSerial = #{cardSerial} order by appDate desc;
	</select>
	
	<select id="detailVat" resultType="accountDto">
		select * from swc_vat where vatId = #{vatId};
	</select>

	<select id="listVatitems" resultType="accountDto">
		select * from swc_vatdata where vatId = #{vatId};
	</select>

	<select id="modalVatB" resultType="accountDto">
		select a.*, b.custName from swc_vat a left join swc_cust b on a.vatSellerCustNo = b.custNo where a.vatStatus in ('B1','B3') and a.attrib not like 'XXX%' and a.compNo = #{compNo} order by a.vatIssueDate desc
	</select>

	<select id="modalVatS" resultType="accountDto">
		select a.*, b.custName from swc_vat a left join swc_cust b on a.vatBuyerCustNo = b.custNo where a.vatStatus in ('S1','S3') and a.attrib not like 'XXX%' and a.compNo = #{compNo} order by a.vatIssueDate desc
	</select>

	<select id="checkVat" resultType="accountDto">
		select count(*) as resultCount from swc_vat where vatSerial = #{vatSerial}
	</select>
	
	<select id="checkBac" resultType="accountDto">
		select count(*) as resultCount from swc_bacledger where bacSerial = #{bacSerial} and baclogTime = #{baclogTime}
	</select>
	
	<select id="cardCheck" resultType="accountDto">
		select count(*) as resultCount from swc_cardledger where appSerial = #{appSerial}
	</select>
	
	<select id="baclist" resultType="accountDto">
		select c.desc03 bacTypeN ,b.desc03 bankCodeN ,a.*, d.baclogTime, d.balanceAmt from swc_bac a
	   	left join swc_code b on b.code03 = a.bankCode
	   	LEFT join swc_code c on c.code03 = a.bacType
	   	LEFT JOIN (SELECT bacSerial, balanceAmt, baclogTime FROM swc_bacledger ORDER BY baclogTime DESC LIMIT 1) d ON a.bacSerial = d.bacSerial
		where a.compNo = #{compNo} and a.attrib not like 'XXX%';
	</select>

	<select id="listCard" resultType="accountDto">
		select a.*, b.desc03 bankCodeN from swc_card a
	   	left join swc_code b on b.code03 = a.cardBank
		where a.compNo = #{compNo} and a.attrib not like 'XXX%';
	</select>

	<select id="baclog" resultType="accountDto">
		select * from swc_bacledger where bacSerial = #{bacSerial} and attrib not like 'XXX%' order by baclogTime;
	</select>
	
	<select id="selectVatCust" resultType="accountDto">
		select count(*) as count, custNo as getNo from swc_cust where custVatno = #{vatNo}
	</select>

	<insert id="insertbacledger">
		insert into swc_bacledger
		(
			compNo,
			bacSerial,
			bacDesc,
			inAmt,
			outAmt,
			baclogTime,
			logType,
			logRemark,
			balanceAmt,
			branchCode,
			linkDoc,
			regDate,
			attrib 
		) 
		values 
		(
			#{compNo},
			#{bacSerial},
			#{bacDesc},
			#{inAmt},
			#{outAmt},
			#{baclogTime},
			#{logType},
			#{logRemark},
			#{balanceAmt},
			#{branchCode},
			#{linkDoc},
			now(),
			'10000'
		);
	</insert>
	
	<insert id="insertCardLedger">
		insert into swc_cardledger
		(
			compNo,
			cardSerial,
			appContents,
			appSerial,
			useDivision,
			salesType,
			instPeriod,
			appAmount,
			appExchange,
			appDate,
			appTime,
			regDate,
			attrib 
		) 
		values 
		(
			#{compNo},
			#{cardSerial},
			#{appContents},
			#{appSerial},
			#{useDivision},
			#{salesType},
			#{instPeriod},
			#{appAmount},
			#{appExchange},
			#{appDate},
			#{appTime},
			now(),
			'10000'
		);
	</insert>

	<insert id="insertbac">
		insert into swc_bac
		(
			bankCode,
			compNo,
			bacNo,
			bacSerial,
			bacIssueDate,
			lastUpdTime,
			bacOwner,
			bacType,
			bacBalance,
			regDate,
			attrib
		) 
		values 
		(
			#{bankCode},
			#{compNo},
			#{bacNo},
			#{bacSerial},
			#{bacIssueDate},
			#{lastUpdTime},
			#{bacOwner},
			#{bacType},
			#{bacBalance},
			now(),
			'100001'
		);
	</insert>
	
	<insert id="insertCard">
		insert into swc_card
		(
			compNo,
			cardSerial,
			cardDivision,
			cardBank,
			cardStatus,
			cardMemo,
			cardIssueDate,
			regDate,
			attrib
		) 
		values 
		(
			#{compNo},
			#{cardSerial},
			#{cardDivision},
			#{cardBank},
			#{cardStatus},
			#{cardMemo},
			#{cardIssueDate},
			now(),
			'100001'
		);
	</insert>

<insert id="insertVat">
	insert into swc_vat
	(
			compNo,
			vatBuyerCustNo,
			vatSellerCustNo,
			vatEmail,
			vatStatus,
			vatNo,
			vatSerial,
			vatProductName,
			vatIssueDate,
			vatTradeDate,
			vatTransDate,
			vatType,
			vatTax,
			vatAmount,
			vatRemark,
			vatIssueType,
			linkedDocNo,
			regDate,
	 		attrib)
		values 
	(
		#{compNo},
		#{vatBuyerCustNo},
		#{vatSellerCustNo},
		#{vatEmail},
		#{vatStatus},
		#{vatNo},
		#{vatSerial},
		#{vatProductName},
		#{vatIssueDate},
		#{vatTradeDate},
		#{vatTransDate},
		#{vatType},
		#{vatTax},
		#{vatAmount},
		#{vatRemark},
		#{vatIssueType},
		#{linkedDocNo},
		now(),
		'100001'
	);
</insert>

	<insert id="insertVatItem">
		insert into swc_vatdata
(vatId,
tradeDate,
itemNo,
itemTitle,
itemUnit,
itemNetprice,
itemQuty,
itemAmount,
itemVat,
itemRemark,
linkedDocNo,
regDate,
attrib) values (#{vatId},
				#{tradeDate},
				#{itemNo},
				#{itemTitle},
				#{itemUnit},
				#{itemNetprice},
				#{itemQuty},
				#{itemAmount},
				#{itemVat},
				#{itemRemark},
				#{linkedDocNo},
				now(),
				'100001');
	</insert>

	<update id="updVatStatus">
		update swc_vat set vatStatus=#{vatStatus} where vatSerial = #{vatSerial};
	</update>
	
	<update id="lastUpdate">
		update swc_bac set lastUpdTime = now() where bacSerial = #{bacSerial};
	</update>
	
	<update id="lastUpdateCard">
		update swc_card set lastUpdTime = now() where cardSerial = #{cardSerial};
	</update>
	
	<update id="bacSerialUpdate">
		update swc_bacledger set linkDoc = #{linkDoc} where baclogId = #{baclogId};
	</update>
	
	<select id="connect_list" resultType="accountDto">
		select * from swc_soppdata01
		left join swc_user on swc_soppdata01.userNo = swc_user.userNo
		LEFT JOIN swc_sopp on swc_soppdata01.soppNo = swc_sopp.soppNo
		where vatSerial = #{vatSerial} and swc_soppdata01.attrib not like 'XXX%'
	</select>
</mapper>