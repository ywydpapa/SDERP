<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="account">

	<select id="listVat" resultType="accountDto">
		select a.*, b.custName vatSellerName, c.custName vatBuyerName, sum(case when a.vatType='B' then a.vatTax + a.vatAmount end) AS vatAmountB, sum(case when a.vatType='S' then a.vatTax + a.vatAmount end) AS vatAmountS, 
		sum(case when a.vatStatus='B5' then d.dataTotal end) AS serialTotalB, sum(case when a.vatStatus='S5' then d.dataTotal end) AS serialTotalS, f.custCRbalance AS custBalance
		from swc_vat a
				   left join swc_cust b on a.vatSellerCustNo = b.custNo
				   left join swc_cust c on a.vatBuyerCustNo = c.custNo
				   left join swc_soppdata01 d on a.vatSerial = d.vatSerial and d.attrib not like 'XXX%'
				   left join swc_cust e ON if(a.vatType='B', a.vatSellerCustNo = e.custNo, a.vatBuyerCustNo = e.custNo)
				   left join swc_custdata f ON e.custNo = f.custNo and f.attrib not like 'XXX%' 
		where a.compNo = #{compNo} and a.attrib not like 'XXX%'
		<if test="listDateFrom != null and listDateFrom != ''">
			and a.vatIssueDate Between #{listDateFrom} and now()
		</if>
		 group by (case when a.vatType='B' then a.vatSellerCustNo END), (case when a.vatType='S' then a.vatBuyerCustNo END) order by a.vatIssueDate desc
	
	</select>

	<select id="sumBVat" resultType="accountDto">
		SELECT a.*, a.settleDRbalance as custBalance, c.custName AS vatSellerName, sum(b.vatTax + b.vatAmount) AS vatAmountB, sum(case when b.vatStatus='B5' then b.vatAmount + b.vatTax end) AS serialTotalB
		FROM swc_cust_balance a 
		LEFT JOIN swc_vat b ON a.custNo = b.vatSellerCustNo AND b.vatIssueDate BETWEEN #{vatIssueDateFrom} and #{vatIssueDateTo}
		LEFT JOIN swc_cust c ON a.custNo = c.custNo
		WHERE a.compNo = #{compNo} AND a.attrib NOT LIKE 'XXX%' AND a.settleYear = #{selectYear} and a.settleDRbalance IS NOT NULL
		GROUP BY a.custNo order BY a.logId asc
	</select>

	<select id="sumBVatSearch" resultType="accountDto">
		SELECT a.*, a.settleDRbalance as custBalance, c.custName AS vatSellerName, sum(b.vatTax + b.vatAmount) AS vatAmountB, sum(case when b.vatStatus='B5' then b.vatAmount + b.vatTax end) AS serialTotalB
		FROM swc_cust_balance a 
		LEFT JOIN swc_vat b ON a.custNo = b.vatSellerCustNo AND b.vatIssueDate BETWEEN #{vatIssueDateFrom} and #{vatIssueDateTo}
		LEFT JOIN swc_cust c ON a.custNo = c.custNo
		WHERE a.compNo = #{compNo} AND a.attrib NOT LIKE 'XXX%' AND a.settleYear = #{selectYear} and a.settleDRbalance IS NOT NULL
		<if test="vatSellerCustNo != null and vatSellerCustNo != ''">
			and a.custNo = #{vatSellerCustNo}
		</if>
		GROUP BY a.custNo order BY a.logId asc
	</select>

	<select id="sumSVat" resultType="accountDto">
		SELECT a.*, a.settleCRbalance as custBalance, c.custName AS vatBuyerName, sum(b.vatTax + b.vatAmount) AS vatAmountS, sum(case when b.vatStatus='S5' then b.vatAmount + b.vatTax end) AS serialTotalS
		FROM swc_cust_balance a 
		LEFT JOIN swc_vat b ON a.custNo = b.vatBuyerCustNo AND b.vatIssueDate BETWEEN #{vatIssueDateFrom} and #{vatIssueDateTo}
		LEFT JOIN swc_cust c ON a.custNo = c.custNo
		WHERE a.compNo = #{compNo} AND a.attrib NOT LIKE 'XXX%' AND a.settleYear = #{selectYear} and a.settleCRbalance IS NOT NULL
		GROUP BY a.custNo order BY a.logId asc
	</select>

	<select id="sumSVatSearch" resultType="accountDto">
		SELECT a.*, a.settleCRbalance as custBalance, c.custName AS vatBuyerName, sum(b.vatTax + b.vatAmount) AS vatAmountS, sum(case when b.vatStatus='S5' then b.vatAmount + b.vatTax end) AS serialTotalS
		FROM swc_cust_balance a 
		LEFT JOIN swc_vat b ON a.custNo = b.vatBuyerCustNo AND b.vatIssueDate BETWEEN #{vatIssueDateFrom} and #{vatIssueDateTo}
		LEFT JOIN swc_cust c ON a.custNo = c.custNo
		WHERE a.compNo = #{compNo} AND a.attrib NOT LIKE 'XXX%' AND a.settleYear = #{selectYear} and a.settleCRbalance IS NOT NULL
		<if test="vatBuyerCustNo != null and vatBuyerCustNo != ''">
			and a.custNo = #{vatBuyerCustNo}
		</if>
		GROUP BY a.custNo order BY a.logId asc
	</select>

	<select id="listVatSearch" resultType="accountDto">
 		select a.*, b.custName vatSellerName, c.custName vatBuyerName, sum(case when a.vatType='B' then a.vatTax + a.vatAmount end) AS vatAmountB, sum(case when a.vatType='S' then a.vatTax + a.vatAmount end) AS vatAmountS, 
		sum(case when a.vatStatus='B5' then d.dataTotal end) AS serialTotalB, sum(case when a.vatStatus='S5' then d.dataTotal end) AS serialTotalS 
		from swc_vat a
			   left join swc_cust b on a.vatSellerCustNo = b.custNo
			   left join swc_cust c on a.vatBuyerCustNo = c.custNo
			   left join swc_soppdata01 d on a.vatSerial = d.vatSerial and d.attrib not like 'XXX%'
		where a.compNo = #{compNo} and a.attrib not like 'XXX%' 
		<if test="vatSellerCustNo != null and vatSellerCustNo != ''">
 		 	and a.vatSellerCustNo = #{vatSellerCustNo}
 		</if>
 		<if test="vatType != null and vatType != ''">
 		 	and a.vatType = #{vatType}
 		</if>
 		<if test="vatIssueDateTo != null and vatIssueDateTo != ''">
 		 	and a.vatIssueDate BETWEEN #{vatIssueDateFrom} and #{vatIssueDateTo}
 		</if>
 		<if test="vatSerial != null and vatSerial != ''">
 		 	and a.vatSerial like CONCAT('%', #{vatSerial}, '%')
 		</if>
 		<if test="vatRemark != null and vatRemark != ''">
 		 	and a.vatRemark like CONCAT('%', #{vatRemark}, '%')
 		</if>
 		<if test="listDateFrom != null and listDateFrom != '' and vatIssueDateTo == null or vatIssueDateTo == '' and vatSerial == null or vatSerial == ''">
			and a.vatIssueDate Between #{listDateFrom} and now()
		</if>
		 group by (case when a.vatType='B' then a.vatSellerCustNo END), (case when a.vatType='S' then a.vatBuyerCustNo END) order by a.vatIssueDate desc
 	</select>
 	
 	<select id="listVatB" resultType="accountDto">
		select a.*, b.custName vatSellerName, c.custName vatBuyerName, sum(d.dataAmt) vatSum from swc_vat a
				   left join swc_cust b on a.vatSellerCustNo = b.custNo
				   left join swc_cust c on a.vatBuyerCustNo = c.custNo
				   left join swc_soppdata01 d on a.vatSerial = d.vatSerial and d.attrib not like 'XXX%'
		where a.compNo = #{compNo} and a.attrib not like 'XXX%' and a.vatType = 'B'
		<if test="vatIssueDateFrom != null and vatIssueDateFrom !=''">
			and a.vatIssueDate Between #{vatIssueDateFrom} and #{vatIssueDateTo}
		</if>
		 group by a.vatSerial order by a.vatIssueDate desc
	
	</select>

	<select id="listVatT" resultType="accountDto">
		select a.*, b.custName vatSellerName, c.custName vatBuyerName from swc_vat a
		left join swc_cust b on a.vatSellerCustNo = b.custNo
		left join swc_cust c on a.vatBuyerCustNo = c.custNo
		where a.compNo = #{compNo} and a.attrib not like 'XXX%' and a.vatType = 'T'
		<if test="listDateFrom != null and listDateFrom != ''">
			and a.regDate Between #{listDateFrom} and now()
		</if>
		order by a.vatIssueDate desc
	</select>
	
	<select id="selectExcelData" resultType="accountDto">
		select a.*, b.custName as vatSellerName, b.custVatno AS proCustVatNo, b.custBossname AS proBossName, c.custName as vatBuyerName, c.custVatno AS recCustVatNo, c.custBossname AS recBossName from swc_vat a
		left join swc_cust b on a.vatSellerCustNo = b.custNo
		left join swc_cust c on a.vatBuyerCustNo = c.custNo
		where a.compNo = #{compNo} and a.attrib not like 'XXX%' and a.vatType = 'T' and a.vatId = #{vatId}
	</select>

	<select id="listVatSearchB" resultType="accountDto">
 		select a.*, b.custName vatSellerName, c.custName vatBuyerName, sum(d.dataAmt) vatSum from swc_vat a
			   left join swc_cust b on a.vatSellerCustNo = b.custNo
			   left join swc_cust c on a.vatBuyerCustNo = c.custNo
			   left join swc_soppdata01 d on a.vatSerial = d.vatSerial and d.attrib not like 'XXX%'
		where a.compNo = #{compNo} and a.attrib not like 'XXX%' and a.vatType = 'B' 
		<if test="vatSellerCustNo != null and vatSellerCustNo != ''">
			and a.vatSellerCustNo = #{vatSellerCustNo}
		</if>
		<if test="vatIssueDateFrom != null and vatIssueDateFrom !=''">
			and a.vatIssueDate Between #{vatIssueDateFrom} and #{vatIssueDateTo}
		</if>
		 group by a.vatSerial order by a.vatIssueDate desc
 	</select>
 	
 	<select id="listVatS" resultType="accountDto">
		select a.*, b.custName vatSellerName, c.custName vatBuyerName, sum(d.dataAmt) vatSum from swc_vat a
				   left join swc_cust b on a.vatSellerCustNo = b.custNo
				   left join swc_cust c on a.vatBuyerCustNo = c.custNo
				   left join swc_soppdata01 d on a.vatSerial = d.vatSerial and d.attrib not like 'XXX%'
		where a.compNo = #{compNo} and a.attrib not like 'XXX%' and a.vatType = 'S'
		<if test="vatIssueDateFrom != null and vatIssueDateFrom !=''">
			and a.vatIssueDate Between #{vatIssueDateFrom} and #{vatIssueDateTo}
		</if>
		 group by a.vatSerial order by a.vatIssueDate desc
	
	</select>

	<select id="listVatSearchS" resultType="accountDto">
 		select a.*, b.custName vatSellerName, c.custName vatBuyerName, sum(d.dataAmt) vatSum from swc_vat a
			   left join swc_cust b on a.vatSellerCustNo = b.custNo
			   left join swc_cust c on a.vatBuyerCustNo = c.custNo
			   left join swc_soppdata01 d on a.vatSerial = d.vatSerial and d.attrib not like 'XXX%'
		where a.compNo = #{compNo} and a.attrib not like 'XXX%' and a.vatType = 'S' 
		<if test="vatBuyerCustNo != null and vatBuyerCustNo != ''">
			and a.vatBuyerCustNo = #{vatBuyerCustNo}
		</if>
		<if test="vatIssueDateFrom != null and vatIssueDateFrom !=''">
			and a.vatIssueDate Between #{vatIssueDateFrom} and #{vatIssueDateTo}
		</if>
		 group by a.vatSerial order by a.vatIssueDate desc
 	</select>

	<select id="listVatSearchT" resultType="accountDto">
		select a.*, b.custName vatSellerName, c.custName vatBuyerName, sum(d.dataAmt) vatSum from swc_vat a
		left join swc_cust b on a.vatSellerCustNo = b.custNo
		left join swc_cust c on a.vatBuyerCustNo = c.custNo
		left join swc_soppdata01 d on a.vatSerial = d.vatSerial and d.attrib not like 'XXX%'
		where a.compNo = #{compNo} and a.attrib not like 'XXX%' and a.vatType = 'T'
		<if test="vatSellerCustNo != null and vatSellerCustNo != ''">
			and a.vatSellerCustNo = #{vatSellerCustNo}
		</if>
		<if test="vatType != null and vatType != ''">
			and a.vatType = #{vatType}
		</if>
		<if test="vatIssueDateTo != null and vatIssueDateTo != ''">
			and a.vatIssueDate BETWEEN #{vatIssueDateFrom} and #{vatIssueDateTo}
		</if>
		<if test="vatSerial != null and vatSerial != ''">
			and a.vatSerial like CONCAT('%', #{vatSerial}, '%')
		</if>
		<if test="vatRemark != null and vatRemark != ''">
			and a.vatRemark like CONCAT('%', #{vatRemark}, '%')
		</if>
		<if test="listDateFrom != null and listDateFrom != '' and vatIssueDateTo == null or vatIssueDateTo == '' and vatSerial == null or vatSerial == ''">
			and a.vatIssueDate Between #{listDateFrom} and now()
		</if>
		group by a.vatSerial order by a.vatIssueDate desc
	</select>

 	<select id="custVatListModal" resultType="accountDto">
 		select a.*, b.custName vatSellerName, c.custName vatBuyerName from swc_vat a
 		left join swc_cust b on a.vatSellerCustNo = b.custNo
		left join swc_cust c on a.vatBuyerCustNo = c.custNo
 		where a.compNo = #{compNo} and vatType = #{vatType}
		<if test="vatIssueDateFrom != null and vatIssueDateFrom !=''">
			and a.vatIssueDate Between #{vatIssueDateFrom} and #{vatIssueDateTo}
		</if>
 		and (a.vatBuyerCustNo = #{custNo} or a.vatSellerCustNo = #{custNo}) order by a.vatIssueDate desc;
 	</select>
 	
 	<select id="bacCalSelect" resultType="accountDto">
		SELECT SUM(inAmt) AS inAmt, SUM(outAmt) AS outAmt from swc_bacledger 
		where bacSerial = #{bacSerial} and attrib not like 'XXX%' 
		and bacDesc like CONCAT('%', #{bacDesc}, '%')
		<if test="baclogTimeFrom != null and baclogTimeFrom != ''">
			and baclogTime Between #{baclogTimeFrom} and #{baclogTimeTo}
		</if>
		order by baclogTime desc;
	</select>
 
	<select id="bacSelectList" resultType="accountDto">
		select * from swc_bacledger 
		where bacSerial = #{bacSerial} and attrib not like 'XXX%' 
		<if test="bacDesc != null and bacDesc != ''">
			and bacDesc like CONCAT('%', #{bacDesc}, '%')
		</if>
		<if test="baclogTimeFrom != null and baclogTimeFrom != ''">
			and baclogTime Between #{baclogTimeFrom} and #{baclogTimeTo}
		</if>
		order by baclogTime desc limit #{betFirstNum}, #{betLastNum};
	</select>
	
	<select id="bacSelectListCnt" resultType="accountDto">
		select count(*) as resultCount from swc_bacledger
		where bacSerial = #{bacSerial} and attrib not like 'XXX%'
		<if test="bacDesc != null and bacDesc != ''">
			and bacDesc like CONCAT('%', #{bacDesc}, '%')
		</if>
		<if test="baclogTimeFrom != null and baclogTimeFrom != ''">
			and baclogTime Between #{baclogTimeFrom} and #{baclogTimeTo}
		</if>
		order by baclogTime desc 
	</select>
	
	<select id="cardSelectList" resultType="accountDto">
		select * from swc_cardledger where cardSerial = #{cardSerial} order by appDate desc;
	</select>
	
	<select id="detailVat" resultType="accountDto">
		select * from swc_vat where vatId = #{vatId};
	</select>

	<select id="listVatitems" resultType="accountDto">
		select * from swc_vatdata where vatId = #{vatId};
	</select>

	<select id="modalVatB" resultType="accountDto">
		select a.*, b.custName from swc_vat a left join swc_cust b on a.vatSellerCustNo = b.custNo where a.vatStatus in ('B1','B3') and a.attrib not like 'XXX%' AND a.linkedcheck = 1 and a.compNo = #{compNo} order by a.vatIssueDate desc
	</select>

	<select id="modalVatS" resultType="accountDto">
		select a.*, b.custName from swc_vat a left join swc_cust b on a.vatBuyerCustNo = b.custNo where a.vatStatus in ('S1','S3') and a.attrib not like 'XXX%' AND a.linkedcheck = 1 and a.compNo = #{compNo} order by a.vatIssueDate desc
	</select>
	<select id="checkVat" resultType="accountDto">
		select count(*) as resultCount from swc_vat where vatSerial = #{vatSerial} and attrib not like 'XXX%'
	</select>
	
	<select id="checkBac" resultType="accountDto">
		select count(*) as resultCount from swc_bacledger where bacSerial = #{bacSerial} and baclogTime = #{baclogTime} and attrib not like 'XXX%'
	</select>
	
	<select id="cardCheck" resultType="accountDto">
		select count(*) as resultCount from swc_cardledger where appSerial = #{appSerial} and attrib not like 'XXX%'
	</select>
	
	<select id="baclist" resultType="accountDto">
		select c.desc03 bacTypeN ,b.desc03 bankCodeN ,a.*, d.baclogTime, d.balanceAmt from swc_bac a
	   	left join swc_code b on b.code03 = a.bankCode
	   	LEFT join swc_code c on c.code03 = a.bacType
	   	LEFT JOIN 
	   	(SELECT * FROM(
			SELECT * 
				FROM swc_bacledger 
				WHERE (bacSerial, baclogTime) IN (
			SELECT bacSerial, MAX(baclogTime)
			FROM swc_bacledger where attrib not like 'XXX%' GROUP BY bacSerial
			)
			ORDER BY baclogTime DESC
		)t
		GROUP BY t.bacSerial) d ON a.bacSerial = d.bacSerial
				where a.compNo = #{compNo} and a.attrib not like 'XXX%';
	</select>

	<select id="listCard" resultType="accountDto">
		select a.*, b.desc03 bankCodeN from swc_card a
	   	left join swc_code b on b.code03 = a.cardBank
		where a.compNo = #{compNo} and a.attrib not like 'XXX%';
	</select>

	<select id="baclog" resultType="accountDto">
		select * from swc_bacledger where bacSerial = #{bacSerial} and attrib not like 'XXX%' order by baclogTime;
	</select>
	
	<select id="selectVatCust" resultType="accountDto">
		select count(*) as count, custNo as getNo from swc_cust where custVatno = #{vatNo}
	</select>

	<select id="treqCardList" resultType="accountDto">
		select * from swc_cardledger
	</select>
	
	<select id="vatSelectList" resultType="accountDto">
		select * from swc_vat where contNo = #{contNo} and attrib not like 'XXX%' order by vatId asc;
	</select>
	
	<select id="vatHtmlListB" resultType="accountDto">
		select a.*, rb.custName AS recCustName, rb.custBossname AS recBossName, rc.custAddr AS recCustAddrFirst, rc.custAddr2 AS recCustAddrLast, rd.custVattype AS recCustVatType, rd.custVatbiz AS recCustVatBiz, 
		pb.custName AS proCustName, pb.custBossname AS proBossName, pb.custEmail AS proCustEmail, pc.custAddr AS proCustAddrFirst, pc.custAddr2 AS proCustAddrLast, pd.custVattype AS proCustVatType, pd.custVatbiz AS proCustVatBiz, pd.custVatno AS proCustVatNo 
		from swc_vat a
		LEFT JOIN swc_cust rb on a.vatSellerCustNo = rb.custNo
		LEFT JOIN swc_custdata02 rc ON a.vatSellerCustNo = rc.custNo
		LEFT JOIN swc_custdata rd ON a.vatSellerCustNo = rd.custNo and rd.attrib not like 'XXX%'
		LEFT JOIN swc_cust pb on a.vatBuyerCustNo = pb.custNo
		LEFT JOIN swc_custdata02 pc ON a.vatBuyerCustNo = pc.custNo
		LEFT JOIN swc_custdata pd ON a.vatBuyerCustNo = pd.custNo and pd.attrib not like 'XXX%'
		where a.vatSerial = #{vatSerial} and a.vatType = #{vatType} and a.attrib not like 'XXX%'
	</select>
	
	<select id="vatHtmlListS" resultType="accountDto">
		select a.*, rb.custName AS recCustName, rb.custBossname AS recBossName, rc.custAddr AS recCustAddrFirst, rc.custAddr2 AS recCustAddrLast, rd.custVattype AS recCustVatType, rd.custVatbiz AS recCustVatBiz, 
		pb.custName AS proCustName, pb.custBossname AS proBossName, pb.custEmail AS proCustEmail, pc.custAddr AS proCustAddrFirst, pc.custAddr2 AS proCustAddrLast, pd.custVattype AS proCustVatType, pd.custVatbiz AS proCustVatBiz, pd.custVatno AS proCustVatNo 
		from swc_vat a
		LEFT JOIN swc_cust rb on a.vatBuyerCustNo = rb.custNo
		LEFT JOIN swc_custdata02 rc ON a.vatBuyerCustNo = rc.custNo
		LEFT JOIN swc_custdata rd ON a.vatBuyerCustNo = rd.custNo and rd.attrib not like 'XXX%'
		LEFT JOIN swc_cust pb on a.vatSellerCustNo = pb.custNo
		LEFT JOIN swc_custdata02 pc ON a.vatSellerCustNo = pc.custNo
		LEFT JOIN swc_custdata pd ON a.vatSellerCustNo = pd.custNo and pd.attrib not like 'XXX%'
		where a.vatSerial = #{vatSerial} and a.vatType = #{vatType} and a.attrib not like 'XXX%'
	</select>

	<insert id="insertbacledger">
		insert into swc_bacledger
		(
			compNo,
			bacSerial,
			bacDesc,
			inAmt,
			outAmt,
			baclogTime,
			logType,
			logRemark,
			balanceAmt,
			branchCode,
			linkDoc,
			regDate,
			attrib 
		) 
		values 
		(
			#{compNo},
			#{bacSerial},
			#{bacDesc},
			#{inAmt},
			#{outAmt},
			#{baclogTime},
			#{logType},
			#{logRemark},
			#{balanceAmt},
			#{branchCode},
			#{linkDoc},
			now(),
			'10000'
		);
	</insert>
	
	<insert id="insertCardLedger">
		insert into swc_cardledger
		(
			compNo,
			cardSerial,
			appContents,
			appSerial,
			useDivision,
			salesType,
			instPeriod,
			appAmount,
			appExchange,
			appDate,
			appTime,
			regDate,
			attrib 
		) 
		values 
		(
			#{compNo},
			#{cardSerial},
			#{appContents},
			#{appSerial},
			#{useDivision},
			#{salesType},
			#{instPeriod},
			#{appAmount},
			#{appExchange},
			#{appDate},
			#{appTime},
			now(),
			'10000'
		);
	</insert>

	<insert id="insertbac">
		insert into swc_bac
		(
			bankCode,
			compNo,
			bacNo,
			bacSerial,
			bacIssueDate,
			lastUpdTime,
			bacOwner,
			bacType,
			bacBalance,
			regDate,
			attrib
		) 
		values 
		(
			#{bankCode},
			#{compNo},
			#{bacNo},
			#{bacSerial},
			#{bacIssueDate},
			#{lastUpdTime},
			#{bacOwner},
			#{bacType},
			#{bacBalance},
			now(),
			'100001'
		);
	</insert>
	
	<insert id="insertCard">
		insert into swc_card
		(
			compNo,
			cardSerial,
			cardDivision,
			cardBank,
			cardStatus,
			cardMemo,
			cardIssueDate,
			regDate,
			attrib
		) 
		values 
		(
			#{compNo},
			#{cardSerial},
			#{cardDivision},
			#{cardBank},
			#{cardStatus},
			#{cardMemo},
			#{cardIssueDate},
			now(),
			'100001'
		);
	</insert>

<insert id="insertVat">
	insert into swc_vat
	(
			compNo,
			vatBuyerCustNo,
			vatSellerCustNo,
			vatEmail,
			vatStatus,
			vatNo,
			vatSerial,
			vatProductName,
			vatIssueDate,
			vatTradeDate,
			vatTransDate,
			vatType,
			vatTax,
			vatAmount,
			vatNet,
			vatQuan,
			vatStandard,
			vatBillType,
			vatRecType,
			vatRemark,
			vatIssueType,
			linkedDocNo,
			regDate,
	 		attrib)
		values 
	(
		#{compNo},
		#{vatBuyerCustNo},
		#{vatSellerCustNo},
		#{vatEmail},
		#{vatStatus},
		#{vatNo},
		#{vatSerial},
		#{vatProductName},
		#{vatIssueDate},
		#{vatTradeDate},
		#{vatTransDate},
		#{vatType},
		#{vatTax},
		#{vatAmount},
		#{vatNet},
		#{vatQuan},
		#{vatStandard},
		#{vatBillType},
		#{vatRecType},
		#{vatRemark},
		#{vatIssueType},
		#{linkedDocNo},
		now(),
		'100001'
	);
</insert>

	<insert id="insertVatItem">
		insert into swc_vatdata
(vatId,
tradeDate,
itemNo,
itemTitle,
itemUnit,
itemNetprice,
itemQuty,
itemAmount,
itemVat,
itemRemark,
linkedDocNo,
regDate,
attrib) values (#{vatId},
				#{tradeDate},
				#{itemNo},
				#{itemTitle},
				#{itemUnit},
				#{itemNetprice},
				#{itemQuty},
				#{itemAmount},
				#{itemVat},
				#{itemRemark},
				#{linkedDocNo},
				now(),
				'100001');
	</insert>
	
	<insert id="bacCheckConnect">
		insert into swc_bacledger_detail
		(
			compNo,
			baclogId,
			linkType,
			linkDocno,
			regDate,
			attrib	
		)
		values
		(
			#{compNo},
			#{baclogId},
			#{linkType},
			#{linkDocno},
			now(),
			'10000'			
		);
	</insert>
	
	<insert id="billInsert">
		insert into swc_vat
		(
			compNo,
			contNo,
			vatBuyerCustNo,
			vatSellerCustNo,
			vatEmail,
			vatStatus,
			vatNo,
			vatProductName,
			vatIssueDate,
			vatTradeDate,
			vatBillType,
			vatRecType,
			vatStandard,
			vatQuan,
			vatNet,
			vatAmount,
			vatTax,
			vatRemark,
			vatMemo,
			vatType,
			regDate,
	 		attrib
	 	)
			values 
		(
			#{compNo},
			#{contNo},
			#{vatBuyerCustNo},
			#{vatSellerCustNo},
			#{vatEmail},
			#{vatStatus},
			#{vatNo},
			#{vatProductName},
			#{vatIssueDate},
			#{vatTradeDate},
			#{vatBillType},
			#{vatRecType},
			#{vatStandard},
			#{vatQuan},
			#{vatNet},
			#{vatAmount},
			#{vatTax},
			#{vatRemark},
			#{vatMemo},
			#{vatType},
			now(),
			'100001'
		);
	</insert>
	
	<insert id="bacDrawInsert" useGeneratedKeys="true" keyProperty="getId">
	 	<selectKey keyProperty="getId" resultType="int" order="AFTER">
	        SELECT max(baclogId) from swc_bacledger
	    </selectKey>
		insert into swc_bacledger
		(
			compNo,
			bacDesc,
			inAmt,
			baclogTime,
			logType,
			branchCode,
			linkDoc,
			regDate,
			attrib
		)
			values
		(
			#{compNo},
			#{bacDesc},
			#{inAmt},
			now(),
			#{logType},
			#{branchCode},
			#{linkDoc},
			now(),
			'10000'
		)
	</insert>
	
	<update id="bacDrawAfterUpdate">
		<selectKey resultType="BigDecimal" keyProperty="balanceAmt" order="BEFORE">
			select (balanceAmt - #{outAmt}) from swc_bacledger where bacSerial = #{bacSerial} and compNo = #{compNo} and attrib not like 'XXX%' order by baclogId desc limit 1
	 	</selectKey>
		update swc_bacledger set bacSerial = #{bacSerial}, outAmt = #{outAmt}, balanceAmt = #{balanceAmt} where compNo = #{compNo} and baclogId = #{baclogId};
	</update>

	<update id="updVatStatus">
		update swc_vat set vatStatus = #{vatStatus} where vatSerial = #{vatSerial} and compNo = #{compNo} and attrib not like 'XXX%';
	</update>
	
	<update id="lastUpdate">
		update swc_bac set lastUpdTime = now() where bacSerial = #{bacSerial};
	</update>
	
	<update id="lastUpdateCard">
		update swc_card set lastUpdTime = now() where cardSerial = #{cardSerial};
	</update>
	
	<update id="bacSerialUpdate">
		update swc_bacledger set linkDoc = #{linkDoc} where baclogId = #{baclogId};
	</update>
	
	<select id="connect_list" resultType="accountDto">
		select * from swc_soppdata01
		left join swc_user on swc_soppdata01.userNo = swc_user.userNo
		LEFT JOIN swc_sopp on swc_soppdata01.soppNo = swc_sopp.soppNo
		where vatSerial = #{vatSerial} and swc_soppdata01.attrib not like 'XXX%'
	</select>
	<update id="updatevatlinkedcheck">
		update swc_vat set linkedcheck = 0 where vatSerial = #{linkDoc}
	</update>
	<update id="sVatToChange">
		update swc_vat set vatStatus = #{vatStatus}, vatType = #{vatType} where vatId = #{vatId};
	</update>
	<update id="updatelogIdlink">
		update swc_bacledger set linkDoc = 'y'
		where baclogId = #{baclogId}
	</update>
	<update id="updatevatmultilinkedcheck">
		update swc_vat set linkedcheck = 0 where vatSerial = #{linkDocno}
	</update>
	
	<update id="bacUpdateMemo">
		update swc_bacledger set bacUpdateMemo = #{bacUpdateMemo} where compNo = #{compNo} and baclogId = #{baclogId};
	</update>
	
	<update id="bacDrawDelect">
		update swc_bacledger set attrib = 'XXXXX' where compNo = #{compNo} and baclogId = #{baclogId};
	</update>
	
	<select id="bac_connect_list" resultType="accountDto">
		SELECT * FROM swc_vat WHERE vatSerial = #{vatId}
	</select>
	<select id="new_bac_connect_list" resultType="accountDto">
		SELECT b.*, c.custName FROM swc_bacledger_detail a 
		left join swc_vat b on a.linkDocno = b.vatSerial
		LEFT JOIN swc_cust c ON b.vatBuyerCustNo = c.custNo
		WHERE baclogId = #{vatId}
	</select>
	<select id="connnectlist_Num" resultType="integer">
		SELECT COUNT(*) FROM swc_bacledger_detail 
		WHERE baclogId = #{baclogId}
	</select>
	<delete id="deleteconnectlist">
		delete from swc_bacledger_detail
		where linkDocno = #{linkDocno}
	</delete>
	<delete id="deleteconnectlist_sub">
		delete from swc_bacledger_detail
		where linkDocno = #{linkDocno} and baclogId = #{baclogId}
	</delete>
	
	<update id="cancelconnect_linkedcheck">
		update swc_vat set linkedcheck = 1
		where vatSerial = #{linkDocno};
	</update>
	<select id="searchserial"  resultType="integer">
		SELECT COUNT(*) FROM swc_bacledger
		WHERE linkDoc = #{linkDocno}
	</select>
	<update id="cancelconnect_linkDoc">
		update swc_bacledger set linkDoc = ''
		where linkDoc = #{linkDocno}
	</update>
	<update id="cancel_connect_final">
		update swc_bacledger set linkDoc = ''
		where baclogId = #{baclogId}
	</update>
	<select id="number_linkDoc" resultType="String">
		select linkDoc from swc_bacledger
		where baclogId = #{baclogId}
	</select>
	<insert id="change_originlinkDoc">
			insert into swc_bacledger_detail
		(
			compNo,
			baclogId,
			linkType,
			linkDocno,
			regDate,
			attrib	
		)
		values
		(
			#{compNo},
			#{baclogId},
			#{linkType},
			#{linkDocno},
			now(),
			'10000'			
		);
	</insert>
	<select id="dataprice" resultType="accountDto">
		SELECT * FROM swc_bacledger_detail  a
		left join swc_vat b ON b.vatSerial = a.linkDocno
		WHERE a.baclogId = #{baclogId}
	</select>
	<select id="dataprice_secound" resultType="accountDto">
		SELECT * FROM swc_bacledger_detail  a
		left join swc_vat b ON b.vatSerial = a.linkDocno
		WHERE a.linkDocno = #{linkDocno}
	</select>
	<select id="total_price" resultType="accountDto">
		SELECT a.inAmt, a.outAmt, b.linkDocno
		FROM swc_bacledger a
		left join swc_bacledger_detail b on a.baclogId = b.baclogId
		WHERE a.baclogId = #{baclogId}
	</select>
	<update id="update_s5">
		update swc_vat set vatStatus = 'S5'
		where vatSerial = #{linkDocno};
	</update>
	<update id="update_s3">
		update swc_vat set vatStatus = 'S3'
		where vatSerial = #{linkDocno};
	</update>
	<update id="update_b5">
		update swc_vat set vatStatus = 'B5'
		where vatSerial = #{linkDocno};
	</update>
	<update id="update_b3">
		update swc_vat set vatStatus = 'B3'
		where vatSerial = #{linkDocno};
	</update>
	<select id="select_vatStatus" resultType="accountDto">
		select vatStatus from swc_vat
		where vatSerial = #{linkDocno}
	</select>
	<update id="update_vatStatus">
		update swc_vat set vatStatus = 'S1'
		where vatSerial = #{linkDocno}
	</update>
	<update id="update_vatStatus_B">
		update swc_vat set vatStatus = 'B1'
		where vatSerial = #{linkDocno}
	</update>
	<select id="endusernamelist" resultType="accountDto">
		SELECT a.buyrNo, b.custName FROM swc_sopp a
		LEFT JOIN swc_cust b ON a.buyrNo = b.custNo
		WHERE a.soppNo = #{soppNo}
	</select>
	<select id="endusernamelist_cont" resultType="accountDto">
		SELECT a.buyrNo, b.custName, a.buyrMemberNo, c.custMname FROM swc_cont a
		LEFT JOIN swc_cust b ON a.buyrNo = b.custNo
		LEFT JOIN swc_custdata03 c ON a.buyrMemberNo = c.custData03no
		WHERE a.contNo = #{contNo}
	</select>
	<update id="bacCheckConnect_modal_update">
		update swc_vat set modal_vatmemo = #{modal_vatmemo}
		where vatSerial = #{linkDocno};
	</update>
	<select id="checktotalprice_vat_and_detail" resultType="accountDto">
		SELECT a.*, c.inAmt, sum(c.inAmt) AS total_Amt FROM swc_bacledger_detail a
		LEFT JOIN swc_vat b ON a.linkDocno = b.vatSerial
		LEFT JOIN swc_bacledger c ON a.baclogId = c.baclogId
		WHERE a.linkDocno = #{linkDocno}
	</select>
	<select id="checktotalprice_vat_and_detail_out" resultType="accountDto">
		SELECT a.*, c.outAmt, sum(c.outAmt) AS total_Amt FROM swc_bacledger_detail a
		LEFT JOIN swc_vat b ON a.linkDocno = b.vatSerial
		LEFT JOIN swc_bacledger c ON a.baclogId = c.baclogId
		WHERE a.linkDocno = #{linkDocno}
	</select>
	<select id="detail_Count_equal_baclogId" resultType="integer">
		SELECT COUNT(*) FROM swc_bacledger_detail
		WHERE linkDocno = #{linkDocno}
	</select>
	
	
	<select id="gradata" resultType="accountDto">
		select sst.userNo, su.userName. sst.deptNo, sst.targetType,
		sst.mm01, sst.mm02, sst.mm03, sst.mm04, sst.mm05
		sst.mm06, sst.mm07, sst.mm08, sst.mm09, sst.mm10
		sst.mm11, sst.mm12
		from swc_sales_target sst
		left join swc_user su on sst.userNo = su.userNo
		where sst.compNo = #{compNo} and sst.targetYear = #{targetYear}
		and sst.targetType = #{targetType} and sst.userNo IN
	</select>
	<select id="gradata01" resultType="accountDto">
		select * from swc_vat
		where (vatStatus = 'S1' or vatStatus = 'S5')
		and date_format(vatIssueDate, '%Y-%m-%d') BETWEEN '2022-01-01' and '2022-01-31';
	</select>
	<select id="gradata02" resultType="accountDto">
		select * from swc_vat
		where (vatStatus = 'S1' or vatStatus = 'S5')
		and date_format(vatIssueDate, '%Y-%m-%d') BETWEEN '2022-01-02' and '2022-02-31';
	</select>
	<select id="gradata03" resultType="accountDto">
		select * from swc_vat
		where (vatStatus = 'S1' or vatStatus = 'S5')
		and date_format(vatIssueDate, '%Y-%m-%d') BETWEEN '2022-03-01' and '2022-03-31';
	</select>
	<select id="gradata04" resultType="accountDto">
		select * from swc_vat
		where (vatStatus = 'S1' or vatStatus = 'S5')
		and date_format(vatIssueDate, '%Y-%m-%d') BETWEEN '2022-04-01' and '2022-04-31';
	</select>
	<select id="gradata05" resultType="accountDto">
		select * from swc_vat
		where (vatStatus = 'S1' or vatStatus = 'S5')
		and date_format(vatIssueDate, '%Y-%m-%d') BETWEEN '2022-05-01' and '2022-05-31';
	</select>
	<select id="gradata06" resultType="accountDto">
		select * from swc_vat
		where (vatStatus = 'S1' or vatStatus = 'S5')
		and date_format(vatIssueDate, '%Y-%m-%d') BETWEEN '2022-06-01' and '2022-06-31';
	</select>
	<select id="gradata07" resultType="accountDto">
		select * from swc_vat
		where (vatStatus = 'S1' or vatStatus = 'S5')
		and date_format(vatIssueDate, '%Y-%m-%d') BETWEEN '2022-07-01' and '2022-07-31';
	</select>
	<select id="gradata08" resultType="accountDto">
		select * from swc_vat
		where (vatStatus = 'S1' or vatStatus = 'S5')
		and date_format(vatIssueDate, '%Y-%m-%d') BETWEEN '2022-08-01' and '2022-08-31';
	</select>
	<select id="gradata09" resultType="accountDto">
		select * from swc_vat
		where (vatStatus = 'S1' or vatStatus = 'S5')
		and date_format(vatIssueDate, '%Y-%m-%d') BETWEEN '2022-09-01' and '2022-09-31';
	</select>
	<select id="gradata10" resultType="accountDto">
		select * from swc_vat
		where (vatStatus = 'S1' or vatStatus = 'S5')
		and date_format(vatIssueDate, '%Y-%m-%d') BETWEEN '2022-10-01' and '2022-10-31';
	</select>
	<select id="gradata11" resultType="accountDto">
		select * from swc_vat
		where (vatStatus = 'S1' or vatStatus = 'S5')
		and date_format(vatIssueDate, '%Y-%m-%d') BETWEEN '2022-11-01' and '2022-11-31';
	</select>
	<select id="gradata12" resultType="accountDto">
		select * from swc_vat
		where (vatStatus = 'S1' or vatStatus = 'S5')
		and date_format(vatIssueDate, '%Y-%m-%d') BETWEEN '2022-12-01' and '2022-12-31';
	</select>
</mapper>