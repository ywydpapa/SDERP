<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="product">

<!-- 상품 세부내역 찾을때 쓰는 쿼리 -->
<select id="oneProductWithProductCategoryNo" resultType="productDto">
	select * from swc_product where productCategoryNo = #{productCategoryNo} and compNo = #{compNo}
</select>

<select id="listProduct" resultType="productDto">
 	select * from swc_product where compNo = #{compNo} and attrib not like 'XXX%' order by productNo
</select>

<select id="listProductGoodsCategory" resultType="productDto">
 	select productCategoryNo, productCategoryName 
	from swc_product where compNo = #{compNo} and attrib not like 'XXX%' 
	group by productCategoryNo 
	order by productNo
</select>

<select id="detailProduct" resultType="productDto">
 	select sp.*, sc.custName
	from swc_product sp
	left join swc_cust sc on sp.custNo = sc.custNo 
	where sp.productNo=#{productNo} 
	and sp.compNo = #{compNo}
</select>
 
<insert id="insertProduct">
 	<!-- INSERT 직전 새 상품인경우 productCategoryNo 마지막번호 + 1 -->
	<selectKey resultType="int" keyProperty="productCategoryNo" order="BEFORE">
		<if test="productCategoryNo == 0">
			select 
				case count(sp1.productNo)
				when 0 then 1
				else (
						select 
							case count(sp2.productNo)
							when 0 then (
										select max(sp3.productCategoryNo)+1 as A 
										from swc_product sp3 
										where sp3.compNo = #{compNo}
										)
							when count(sp2.productNo) <![CDATA[>=]]> 1 then sp2.productCategoryNo
							end
						from swc_product sp2
						where sp2.compNo = #{compNo}
						and sp2.productCategoryName = #{productCategoryName}
					)
				end
				as productNo
			from swc_product sp1 where compNo = #{compNo}
			<!--
			- 데이터 0개 -> 1로 세팅
			- 데이터 일치 -> 일치된 productCategoryNo
			- 데이터 불일치 -> 하지만 다른데이터있는경우 last(productCategoryNo) + 1
			-->
		</if>
 		<if test="productCategoryNo != 0">
			select #{productCategoryNo} as productCategoryNo
		</if>
 	</selectKey>
 	insert into swc_product (productCategoryNo, productCategoryName, compNo, custNo, userNo, productName, productDesc, productDefaultPrice, productImageNo, attrib)
 	values (#{productCategoryNo}, #{productCategoryName}, #{compNo}, #{custNo}, #{userNo}, #{productName}, #{productDesc}, #{productDefaultPrice}, #{productImageNo}, '10000')
 </insert>

<update id="updateProduct">
 	update swc_product set 
 			productName=#{productName},
 			productDesc=#{productDesc}
 	where productNo=#{productNo} and compNo = #{compNo}
</update>
 
 <delete id="deleteProduct">
 update swc_product set attrib = 'XXXXX'  where productNo=#{productNo} and compNo = #{compNo}
 </delete>
 		
</mapper>